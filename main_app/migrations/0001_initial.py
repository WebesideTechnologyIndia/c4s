# Generated by Django 5.2.1 on 2025-10-16 06:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AdmissionAbroadCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Service title', max_length=200)),
                ('description', models.TextField(help_text='Short description', max_length=300)),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='admission_abroad/')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('redirect_link', models.CharField(blank=True, max_length=500)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#3498db', 'Blue'), ('#2ecc71', 'Green')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admission Abroad Card',
                'verbose_name_plural': 'Admission Abroad Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='AdmissionIndiaCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Card title (e.g., ALL INDIA STATE WISE COUNSELLING)', max_length=200)),
                ('feature_1', models.CharField(default='State wise Updates', help_text='Feature 1', max_length=100)),
                ('feature_2', models.CharField(default='Verified Information', help_text='Feature 2', max_length=100)),
                ('feature_3', models.CharField(default='Real time Information', help_text='Feature 3', max_length=100)),
                ('feature_4', models.CharField(default='Expert Counselling', help_text='Feature 4', max_length=100)),
                ('redirect_link', models.CharField(blank=True, help_text='Card click pe kaha redirect ho?', max_length=500)),
                ('border_gradient_start', models.CharField(default='#ED651C', help_text='Gradient start color', max_length=7)),
                ('border_gradient_end', models.CharField(default='#F4800C', help_text='Gradient end color', max_length=7)),
                ('order', models.IntegerField(default=0, help_text='Display order (0, 1, 2...)')),
                ('is_active', models.BooleanField(default=True, help_text='Show on page?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admission India Card',
                'verbose_name_plural': 'Admission India Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='AllIndiaServiceCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Service title (e.g., COLLEGE COMPARISON)', max_length=200)),
                ('card_image', models.ImageField(blank=True, help_text='Upload icon/image', null=True, upload_to='all_india_services/')),
                ('image_url', models.URLField(blank=True, help_text='OR paste image URL', max_length=500)),
                ('redirect_link', models.CharField(blank=True, help_text='Card click pe kaha redirect ho?', max_length=500)),
                ('category_class', models.CharField(choices=[('cat-1', 'Orange'), ('cat-2', 'Red'), ('cat-3', 'Yellow'), ('cat-4', 'Green'), ('cat-5', 'Blue'), ('cat-6', 'Purple'), ('cat-7', 'Pink'), ('cat-8', 'Teal'), ('cat-9', 'Indigo'), ('cat-10', 'Cyan')], default='cat-1', help_text='Card color category', max_length=20)),
                ('order', models.IntegerField(default=0, help_text='Display order (1, 2, 3...)')),
                ('is_active', models.BooleanField(default=True, help_text='Show on page?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'All India Service Card',
                'verbose_name_plural': 'All India Service Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CareerCounsellingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Service title', max_length=150)),
                ('description', models.TextField(help_text='Short description', max_length=200)),
                ('svg_icon', models.TextField(blank=True, help_text='Paste SVG code here')),
                ('redirect_link', models.CharField(blank=True, help_text='Redirect URL', max_length=500)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#9b59b6', 'Purple'), ('#2ecc71', 'Green'), ('#3498db', 'Blue')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Career Counselling Service',
                'verbose_name_plural': 'Career Counselling Services',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='CollegeCounsellingCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Card title (e.g., Admission India)', max_length=100)),
                ('description', models.TextField(help_text='Short description', max_length=200)),
                ('card_image', models.ImageField(blank=True, help_text='Upload image', null=True, upload_to='counselling_cards/')),
                ('image_url', models.URLField(blank=True, help_text='OR paste image URL', max_length=500)),
                ('redirect_link', models.CharField(blank=True, help_text='Card click pe kaha redirect ho?', max_length=500)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#2ecc71', 'Green'), ('#3498db', 'Blue')], default='#f39c12', help_text='Border color', max_length=7)),
                ('order', models.IntegerField(default=0, help_text='Display order (0, 1, 2...)')),
                ('is_active', models.BooleanField(default=True, help_text='Show on counselling page?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'College Counselling Card',
                'verbose_name_plural': 'College Counselling Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_type', models.CharField(max_length=100)),
                ('complaint_subject', models.CharField(max_length=200)),
                ('complaint_description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('admin_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_complaints', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CounsellingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_submitted', models.BooleanField(default=False)),
                ('documents_verified', models.BooleanField(default=False)),
                ('choice_filling_completed', models.BooleanField(default=False)),
                ('seat_allotment_status', models.CharField(default='Pending', max_length=100)),
                ('current_stage', models.CharField(choices=[('registration', 'Registration Completed'), ('documents_upload', 'Documents Upload in Progress'), ('documents_verification', 'Documents Under Verification'), ('choice_filling', 'Choice Filling in Progress'), ('seat_allotment', 'Waiting for Seat Allotment'), ('seat_allocated', 'Seat Allocated'), ('admission_completed', 'Admission Completed')], default='registration', max_length=50)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='counselling_status', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('tuition_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('courses_offered', models.TextField(help_text='Comma separated courses')),
                ('facilities', models.TextField(blank=True)),
                ('college_image', models.ImageField(blank=True, null=True, upload_to='colleges/')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('website', models.URLField(blank=True, max_length=500)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colleges', to='main_app.country')),
            ],
            options={
                'verbose_name': 'College',
                'verbose_name_plural': 'Colleges',
                'ordering': ['country', 'state', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DistanceEducationCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=300)),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='distance_education/')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('redirect_link', models.CharField(blank=True, max_length=500)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#3498db', 'Blue'), ('#2ecc71', 'Green')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Distance Education Card',
                'verbose_name_plural': 'Distance Education Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='DoubtSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('doubt_description', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('resolved', 'Resolved')], default='pending', max_length=20)),
                ('response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_doubts', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doubts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HomeSectionCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_line1', models.CharField(help_text='First line (REQUIRED - e.g., CAREER COUNSELLING)', max_length=100)),
                ('title_line2', models.CharField(blank=True, help_text='Second line (OPTIONAL - e.g., SERVICES)', max_length=100)),
                ('card_image', models.ImageField(blank=True, help_text='Upload image', null=True, upload_to='home_cards/')),
                ('image_url', models.URLField(blank=True, help_text='OR paste image URL (Icons8, etc)', max_length=500)),
                ('redirect_link', models.CharField(blank=True, help_text='Card click pe kaha redirect ho?', max_length=500)),
                ('border_color', models.CharField(default='#ff6b35', help_text='Border color (hex code)', max_length=7)),
                ('title_color', models.CharField(default='#ff6b35', help_text='Title color (hex code)', max_length=7)),
                ('order', models.IntegerField(default=0, help_text='Display order (0, 1, 2...)')),
                ('is_active', models.BooleanField(default=True, help_text='Show on homepage?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Home Section Card',
                'verbose_name_plural': 'Home Section Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='OnlineEducationCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(max_length=300)),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='online_education/')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('redirect_link', models.CharField(blank=True, max_length=500)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#3498db', 'Blue'), ('#2ecc71', 'Green')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Online Education Card',
                'verbose_name_plural': 'Online Education Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ProfessionalCounsellingCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Card title', max_length=200)),
                ('description', models.TextField(help_text='Card description', max_length=300)),
                ('card_image', models.ImageField(blank=True, null=True, upload_to='counselling_cards/')),
                ('image_url', models.URLField(blank=True, max_length=500)),
                ('section_id', models.CharField(help_text='Section ID (documents, choices, status, doubts, complaints)', max_length=50)),
                ('border_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#2ecc71', 'Green'), ('#9b59b6', 'Purple'), ('#3498db', 'Blue')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professional Counselling Card',
                'verbose_name_plural': 'Professional Counselling Cards',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='main_app.country')),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('country', 'name')},
            },
        ),
        migrations.CreateModel(
            name='CollegeComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison_title', models.CharField(help_text='e.g., Top Engineering Colleges in Haryana', max_length=255)),
                ('comparison_summary', models.TextField(blank=True, help_text='Short summary of comparison')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('colleges', models.ManyToManyField(help_text='Select 2 or more colleges to compare', related_name='comparisons', to='main_app.college')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_comparisons', to=settings.AUTH_USER_MODEL)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to='main_app.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to='main_app.state')),
            ],
            options={
                'verbose_name': 'College Comparison',
                'verbose_name_plural': 'College Comparisons',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='college',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='colleges', to='main_app.state'),
        ),
        migrations.CreateModel(
            name='StateWiseCounsellingUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='e.g., Haryana NEET Counselling 2025', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Short description about the counselling', max_length=300)),
                ('external_link', models.URLField(help_text='External counselling website URL', max_length=500)),
                ('icon_image', models.ImageField(blank=True, help_text='Upload icon', null=True, upload_to='counselling_updates/')),
                ('icon_url', models.URLField(blank=True, help_text='OR paste icon URL', max_length=500)),
                ('icon_color', models.CharField(choices=[('#ED651C', 'Orange'), ('#e74c3c', 'Red'), ('#2ecc71', 'Green'), ('#3498db', 'Blue'), ('#9b59b6', 'Purple'), ('#f39c12', 'Yellow'), ('#1abc9c', 'Teal')], default='#ED651C', help_text='Icon background color', max_length=7)),
                ('last_updated', models.DateField(blank=True, help_text='Last update date', null=True)),
                ('is_new', models.BooleanField(default=False, help_text="Show 'NEW' badge?")),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counselling_updates', to='main_app.state')),
            ],
            options={
                'verbose_name': 'State Wise Counselling Update',
                'verbose_name_plural': 'State Wise Counselling Updates',
                'ordering': ['state', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True, max_length=300)),
                ('icon_image', models.ImageField(blank=True, null=True, upload_to='sub_categories/')),
                ('icon_url', models.URLField(blank=True, max_length=500)),
                ('icon_color', models.CharField(choices=[('#f39c12', 'Orange'), ('#e74c3c', 'Red'), ('#2ecc71', 'Green'), ('#3498db', 'Blue'), ('#9b59b6', 'Purple')], default='#f39c12', max_length=7)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='main_app.allindiaservicecard')),
                ('parent_subcategory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='main_app.subcategory')),
            ],
            options={
                'verbose_name': 'Sub Category',
                'verbose_name_plural': 'Sub Categories',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='UserRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('father_name', models.CharField(max_length=100)),
                ('mobile', models.CharField(max_length=15)),
                ('whatsapp_mobile', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('course', models.CharField(choices=[('B.TECH', 'B.TECH'), ('MBBS', 'MBBS'), ('B.COM', 'B.COM'), ('BBA', 'BBA'), ('BCA', 'BCA'), ('BSC NURSING', 'BSC NURSING'), ('BAMS', 'BAMS'), ('LLB [ 5 YEARS ]', 'LLB [ 5 YEARS ]'), ('MBA', 'MBA'), ('BSC COMP SCIENCE', 'BSC COMP SCIENCE'), ('B.PHARMA', 'B.PHARMA'), ('D.PHARMA', 'D.PHARMA'), ('ANM', 'ANM'), ('GNM', 'GNM'), ('BDS', 'BDS'), ('BSC BIOTECH', 'BSC BIOTECH'), ('B.TECH BIOTECH', 'B.TECH BIOTECH'), ('B.ED', 'B.ED'), ('MCA', 'MCA'), ('PHD', 'PHD'), ('M.COM', 'M.COM'), ('BA JMC', 'BA JMC'), ('BSC PCM', 'BSC PCM'), ('BSC CHEMISTRY', 'BSC CHEMISTRY'), ('BSC PHYSICS', 'BSC PHYSICS'), ('BSC MATHEMATICS', 'BSC MATHEMATICS'), ('BA CORE', 'BA CORE'), ('BA PSYCOLOGY', 'BA PSYCOLOGY'), ('BPT', 'BPT'), ('BUMS', 'BUMS'), ('BHMS', 'BHMS'), ('BSC OPERATION THEATER', 'BSC OPERATION THEATER'), ('HOTEL MANAGEMENT', 'HOTEL MANAGEMENT'), ('BSC ZOOLOGY', 'BSC ZOOLOGY'), ('BSC FOOD TECHNOLOGY', 'BSC FOOD TECHNOLOGY'), ('BSC ANIMATION AND MULTIMEDIA', 'BSC ANIMATION AND MULTIMEDIA'), ('BA SOCIAL WORK', 'BA SOCIAL WORK'), ('B.DESIGN', 'B.DESIGN'), ('BMS', 'BMS'), ('B.ARCH', 'B.ARCH')], max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=128)),
                ('otp', models.CharField(blank=True, max_length=6, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.country')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.state')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Registration',
                'verbose_name_plural': 'User Registrations',
            },
        ),
        migrations.CreateModel(
            name='ChoiceFilling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_number', models.IntegerField()),
                ('college_name', models.CharField(max_length=200)),
                ('course_name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['preference_number'],
                'unique_together': {('student', 'preference_number')},
            },
        ),
        migrations.CreateModel(
            name='StudentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('PHOTO', 'PHOTO *'), ('SIGNATURE', 'SIGNATURE *'), ('10TH', '10TH MARKSHEET *'), ('12TH', '12TH MARKSHEET *'), ('FAMILY_ID', 'FAMILY ID * (Haryana Students)'), ('MIGRATION', 'MIGRATION CERTIFICATE *'), ('CHARACTER_CERTIFICATE', 'CHARACTER CERTIFICATE *'), ('AADHAR_CARD', 'AADHAR CARD *'), ('COMPETITIVE_EXAM_ADMIT_CARD', 'COMPETITIVE EXAM ADMIT CARD *'), ('COMPETITIVE_EXAM_RESULT_CARD', 'COMPETITIVE EXAM RESULT CARD *'), ('INCOME_CERTIFICATE', 'INCOME CERTIFICATE'), ('DOMICILE', 'DOMICILE CERTIFICATE'), ('BIRTH_CERTIFICATE', 'BIRTH CERTIFICATE'), ('SC', 'SC - Scheduled Caste Certificate'), ('ST', 'ST - Scheduled Tribe Certificate'), ('OBC', 'OBC - Other Backward Class Certificate'), ('BC_A', 'BC-A - Backward Class A Certificate'), ('BC_B', 'BC-B - Backward Class B Certificate'), ('PH', 'PH - Physically Handicapped Certificate'), ('ESM', 'ESM - Ex-Serviceman Certificate'), ('EWS', 'EWS - Economically Weaker Section Certificate')], max_length=50)),
                ('document_file', models.FileField(upload_to='student_documents/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('admin_remarks', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'unique_together': {('student', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='e.g., Top 10 Engineering Colleges in India', max_length=300)),
                ('slug', models.SlugField(blank=True, max_length=300, unique=True)),
                ('summary', models.TextField(blank=True, help_text='Short summary (optional)', max_length=500)),
                ('content', models.TextField(help_text='Full page content (HTML supported)')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='content_pages/')),
                ('featured_image_url', models.URLField(blank=True, max_length=500)),
                ('meta_description', models.CharField(blank=True, help_text='SEO meta description', max_length=160)),
                ('meta_keywords', models.CharField(blank=True, help_text='Comma separated keywords', max_length=255)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False, help_text='Show as featured content?')),
                ('views_count', models.IntegerField(default=0, help_text='Page view count')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('sub_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_pages', to='main_app.subcategory')),
            ],
            options={
                'verbose_name': 'Content Page',
                'verbose_name_plural': 'Content Pages',
                'ordering': ['sub_category', 'order', '-created_at'],
                'unique_together': {('sub_category', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='UniversalContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('home', 'Home Section'), ('college_counselling', 'College Counselling'), ('career_counselling', 'Career Counselling'), ('admission_india', 'Admission India'), ('all_india', 'All India Services'), ('professional', 'Professional Counselling'), ('admission_abroad', 'Admission Abroad'), ('distance_education', 'Distance Education'), ('online_education', 'Online Education')], max_length=50)),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(max_length=300)),
                ('content_type', models.CharField(choices=[('card', 'Card'), ('category', 'Category/Folder'), ('page', 'Page'), ('link', 'External Link')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='universal/')),
                ('image_url', models.URLField(blank=True)),
                ('redirect_link', models.CharField(blank=True, max_length=500)),
                ('icon_class', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#ff6b35', max_length=7)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('login_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='main_app.universalcontent')),
            ],
            options={
                'ordering': ['order', 'title'],
                'unique_together': {('parent', 'slug', 'section')},
            },
        ),
    ]
